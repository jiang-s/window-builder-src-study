import org.eclipse.core.databinding.DataBindingContext;
import org.eclipse.core.databinding.observable.Realm;
import org.eclipse.jface.databinding.swt.SWTObservables;
import org.eclipse.swt.SWT;
import org.eclipse.swt.widgets.Display;
import org.eclipse.swt.widgets.Shell;

field
	private DataBindingContext m_bindingContext;

field
	private %BeanClass% %BeanField%;
%WidgetFields%

method
	/**
	 * Launch the application.
	 * @param args
	 */
	public static void main(String args[]) {
		Display display = new Display();
		Realm.runWithDefault(SWTObservables.getRealm(display), new Runnable() {
			public void run() {
				try {
					Display display = Display.getDefault();
					%TypeName% shell = new %TypeName%(display, SWT.SHELL_TRIM);
					shell.open();
					shell.layout();
				    while (!shell.isDisposed()) {
				    	if (!display.readAndDispatch()) {
							display.sleep();
						}
				    }
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

method
	/**
	 * Create the shell.
	 * @param display
	 * @param style
	 */
	public %TypeName%(Display display, int style) {
		super(display, style);
		%CreateMethod%();
	}

method
	/**
	 * Create contents of the window.
	 */
	protected void %CreateMethod%() {
		setText("SWT Application");
		setSize(%DefaultFormSize%);
%Widgets%this%
		if (%BeanFieldAccess% != null) {
			m_bindingContext = initDataBindings();
		}
	}

method
	@Override
	protected void checkSubclass () {
		// Disable the check that prevents subclassing of SWT components
	}

method
	private DataBindingContext initDataBindings() {
%Observables%
		//
		DataBindingContext bindingContext = new DataBindingContext();
		//
%Bindings%
		//
		return bindingContext;
	}

method
	public %BeanClass% get%BeanName%() {
		return %BeanFieldAccess%;
	}

method
	public void set%BeanName%(%BeanClass% new%BeanName%) {
		set%BeanName%(new%BeanName%, true);
	}

method
	public void set%BeanName%(%BeanClass% new%BeanName%, boolean update) {
		%BeanFieldAccess% = new%BeanName%;
		if (update) {
			if (m_bindingContext != null) {
				m_bindingContext.dispose();
				m_bindingContext = null;
			}
			if (%BeanFieldAccess% != null) {
				m_bindingContext = initDataBindings();
			}
		}
	}

