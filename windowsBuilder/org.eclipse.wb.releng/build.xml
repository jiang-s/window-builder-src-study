<?xml version="1.0" encoding="UTF-8"?>
<!-- ====================================================================== 
     Jun 15, 2011 12:19:58 PM

     WindowBuilderBuild    
     This Ant script is used to build the Window Builder code
                   
     mrussell (Mark R Russell)
     
     Copyright (c) 2011 Google Inc. All rights reserved. This program and the
     accompanying materials are made available under the terms of the Eclipse
     Public License v1.0 which is available at
     http://www.eclipse.org/legal/epl-v10.html
     Contributors: Google Inc 
     Some important parts have been copied from Teneo and Buckminster's own
     build setups
    
     ====================================================================== -->
<project name="WindowBuilderBuild" default="build">
  <description>
            This Ant script is used to build the Window Builder code
    </description>
  <!-- ================================= 
          target: build              
         ================================= -->
  <target name="build" depends="init, init.checks, install.buckminster, buckminster" 
          description="This script is used to build the Window Builder code">
  </target>
  
  <target name="init.clean.tools" if="clean.tools">
    <delete dir="${build.tools}" failonerror="true" quiet="true" />
  </target>

  <!--
     
  -->
  <target name="init.checks" depends="init.clean.tools">
    <available file="${build.tools}/director/director"
               property="director.exists" />
    <available file="${build.tools}/buckminster/buckminster"
               property="buckminster.exists" />
  </target>


  <!-- - - - - - - - - - - - - - - - - - 
          target: init                      
         - - - - - - - - - - - - - - - - - -->
  <target name="init">
    <property environment="env" />

    <condition property="build.hudson.workspace" value="${env.WORKSPACE}" else="${basedir}/ws">
      <isset property="env.WORKSPACE" />
    </condition>

    <condition property="build.buck.loglevel" value="${env.BUCKMINSTER_LOGLEVEL}" else="info">
        <isset property="env.BUCKMINSTER_LOGLEVEL" />
    </condition>
    <echoproperties prefix="env." />
    <printProperty property="build.hudson.workspace" />
    <property name="cwd" location="." />
    <condition property="build.data" value="${cwd}/data">
      <not>
        <isset property="build.data" />
      </not>
    </condition>
    <condition property="build.eclipse.target" value="3.7">
      <not>
        <isset property="build.eclipse.target" />
      </not>
    </condition>
    
    <property name="build.wb.cquery" location="WB.cquery" />

    <printProperty property="build.data" />
    <echo message="reading ${build.data}/${user.name}.properties" />
    <property file="${build.data}/${user.name}.properties" />
    <echo message="reading ${build.data}/default-user.properties" />
    <property file="${build.data}/default-user.properties" />

    <printProperty property="build.root" />
    <delete dir="${build.tmp}" failonerror="false" includeemptydirs="true" />
    <delete dir="${build.target}" failonerror="false" includeemptydirs="true" />

    <echoproperties prefix="build." />

    <mkdir dir="${build.root}" />
    <mkdir dir="${build.tmp}" />
    <mkdir dir="${build.buck.workspace}" />
    <mkdir dir="${build.target}" />
    <setupTarget eclipseVersion="${build.eclipse.target}" />
  </target>
  
  <target name="buckminster" >
    <copy todir="${build.tmp}" overwrite="true">
      <fileset dir="." includes="script.buck" />
      <filterset begintoken="@" endtoken="@">
        <!--
        <filter token="target.platform" value="${build.target}/eclipse" />
        -->
        <filter token="target.platform" value="/usr/local/google/home/mrrussell/tmp/eclipse" />
        <filter token="build.wb.cquery" value="${build.wb.cquery}" />
        
      </filterset>
    </copy>
    <launchEclipse app="buckminster">
      <args>
        <arg value="-data" />
        <arg value="${build.buck.workspace}" />
        <arg value="--loglevel" />
        <arg value="${build.buck.loglevel}" />
        <arg value="--scriptfile" />
        <arg value="${build.tmp}/script.buck" />
      </args>
    </launchEclipse>
  </target>

  <target name="get.director" unless="director.exists">
    <echo message="Fetching headless director application" />
    <tempfile destdir="${java.io.tmpdir}" prefix="director-" suffix=".zip"
              property="director.zip" deleteonexit="true" />
    <get src="${director.url}" dest="${director.zip}" verbose="true"/>
    <mkdir dir="${build.tools}" />
    <unzip src="${director.zip}" dest="${build.tools}" />
    <delete file="${director.zip}" />
  </target>

  <target name="install.buckminster" unless="buckminster.exists" depends="get.director">
    <echo message="Configuring headless buckminster with needed features" />
    <launchEclipse app="director">
      <args>
        <jvmarg value="-Declipse.p2.mirrors=false" />
        <!--jvmarg value="-Dorg.eclipse.update.jarprocessor.pack200=${org.eclipse.update.jarprocessor.pack200}" /-->
        <arg value="-r" />
        <arg value="${buckminster.p2.site}" />
        <arg value="-d" />
        <arg value="${build.tools}/buckminster" />
        <arg value="-p" />
        <arg value="Buckminster" />
        <arg value="-i" />
        <arg value="org.eclipse.buckminster.cmdline.product" />
        <arg value="-i" />
        <arg value="org.eclipse.buckminster.core.headless.feature.feature.group" />
        <arg value="-i" />
        <arg value="org.eclipse.buckminster.pde.headless.feature.feature.group" />
        <arg value="-i" />
        <arg value="org.eclipse.buckminster.git.headless.feature.feature.group" />
        <arg value="-i" />
        <arg value="org.eclipse.buckminster.emma.headless.feature.feature.group" />
      </args>
    </launchEclipse>
    <launchEclipse app="director">
      <args>
        <jvmarg value="-Declipse.p2.mirrors=false" />
        <!--jvmarg value="-Dorg.eclipse.update.jarprocessor.pack200=${org.eclipse.update.jarprocessor.pack200}" /-->
        <arg value="-r" />
        <arg value="${buckminster.p2.external.site}" />
        <arg value="-d" />
        <arg value="${build.tools}/buckminster" />
        <arg value="-p" />
        <arg value="Buckminster" />
        <arg value="-i" />
        <arg value="org.eclipse.buckminster.subclipse.headless.feature.feature.group" />
      </args>
    </launchEclipse>
  </target>

  <!-- = = = = = = = = = = = = = = = = =
          macrodef: printProperty          
         = = = = = = = = = = = = = = = = = -->
  <macrodef name="printProperty">
    <attribute name="property" />
    <attribute name="indent" default="" />
    <sequential>
      <echo message="@{property} = ${@{property}}" />
    </sequential>
  </macrodef>

  <!-- = = = = = = = = = = = = = = = = =
          macrodef: setupTarget          
         = = = = = = = = = = = = = = = = = -->
  <macrodef name="setupTarget">
    <attribute name="eclipseVersion" default="${build.eclipse.target}" />
    <attribute name="eclipseArchiveUrl" default="${eclipse-@{eclipseVersion}-url}/${eclipse-@{eclipseVersion}-archive}" />
    <attribute name="eclipseArchive" default="${build.tmp}/${eclipse-@{eclipseVersion}-archive}" />
    <sequential>
      <echo message="getting @{eclipseArchiveUrl} to @{eclipseArchive}" />
      <get dest="@{eclipseArchive}" src="@{eclipseArchiveUrl}" />
      <echo message="untar @{eclipseArchive} to ${build.target}" />
      <untar src="${build.tmp}/${eclipse-@{eclipseVersion}-archive}" dest="${build.target}" compression="gzip" />
    </sequential>
  </macrodef>
  
  <!-- = = = = = = = = = = = = = = = = =
          macrodef: launchEclipse
         = = = = = = = = = = = = = = = = = -->
  <macrodef name="launchEclipse">
    <attribute name="app" />
    <element name="args" optional="true" />
    <sequential>
      <!-- We assume that the eclipse installation is beneath ${buildtools} -->
      <property name="@{app}.deploy.dir" value="${build.tools}/@{app}" />

      <!-- Find the Eclipse launcher and adding its location to the @{app}.launcher property -->
      <pathconvert property="@{app}.launcher">
        <first count="1">
          <sort>
            <fileset dir="${@{app}.deploy.dir}/plugins" includes="**/org.eclipse.equinox.launcher_*.jar" />
            <reverse xmlns="antlib:org.apache.tools.ant.types.resources.comparators">
              <date />
            </reverse>
          </sort>
        </first>
      </pathconvert>

      <!-- Launch the eclipse application -->
      <java fork="true" jar="${@{app}.launcher}" dir="${@{app}.deploy.dir}">
        <env key="no_proxy" value="${no.proxy}" />
        <!-- Uncomment to debug <jvmarg value="-agentlib:jdwp=transport=dt_socket,address=8000,server=y,suspend=y"/> -->
        <args />
      </java>
    </sequential>
  </macrodef>
</project>
